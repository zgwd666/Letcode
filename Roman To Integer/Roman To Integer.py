#https://leetcode.cn/problems/roman-to-integer/
'''
解题思路：
通过不断提取字符串的前面的字符来还原数字，其中需要关注的就是900 400 90 40 9 4 等值
'''
class Solution:
    def romanToInt(self, s: str) -> int:
        num=0#初始化数字值
        while s:#进行遍历，直到所有的字符都被遍历完成为止
            if s[0]=='M':转换千分位上的数字
                num+=1000
                s=s[1:]#弹出M
                if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                    break
            if s[0]=='C':#如果字符串为C的话，存在CM 900 CD 400 C+...三种可能
                if len(s)>1:如果此时除了C之外，还有其他的字符，则进行判断
                    if s[1]=='M':#CM=900
                        num+=900
                        s=s[2:]#将CM弹出
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                    elif s[1]=='D':#CD=400
                        num+=400
                        s=s[2:]#将CD弹出
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                    else:#直接转换为100
                        num+=100
                        s=s[1:]#弹出C
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                else:#如果只有C，那就直接转换为100
                    num+=100
                    s=s[1:]#弹出C
                    if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                        break
            if s[0]=='D':#如果字符串为D的话，直接转换为500
                num+=500
                s=s[1:]#弹出D
                if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                    break
            if s[0]=='X':如果字符串为X的话，存在XL 40 XC 90 X+...三种可能
                if len(s)>1:如果此时除了X之外，还有其他的字符，则进行判断
                    if s[1]=='L':#XL=40
                        num+=40
                        s=s[2:]#弹出XL
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                    elif s[1]=='C':#XC=90
                        num+=90
                        s=s[2:]#弹出XC
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                    else:#直接转换为10
                        num+=10
                        s=s[1:]#弹出X
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                else:#如果只有X，那就直接转换为10
                    num+=10
                    s=s[1:]#弹出X
                    if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                        break
            if s[0]=='L':#如果字符串为L的话，直接转换为50
                num+=50
                s=s[1:]#弹出L
                if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                    break
            if s[0]=='I':如果字符串为I的话，存在IX 9 IV 4 I+...三种可能
                if len(s)>1:如果此时除了I之外，还有其他的字符，则进行判断
                    if s[1]=='X':#IX=9
                        num+=9
                        s=s[2:]#弹出IX
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                    elif s[1]=='V':#IV=4
                        num+=4
                        s=s[2:]#弹出IV
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                    else:#直接转换为1
                        num+=1
                        s=s[1:]#弹出I
                        if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                            break
                else:#如果只有I，那就直接转换为1
                    num+=1
                    s=s[1:]#弹出I
                    if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                        break
            if s[0]=='V':#如果字符串为V的话，直接转换为5
                num+=5
                s=s[1:]#弹出V
                if len(s)==0:#判断提取是否结束，结束后直接跳出循环，不加这一句，底下的if语句会对空的字符串进行索引，从而报错
                    break
        return num
